plugins {
    // 프로젝트의 기반 언어로 Java를 사용합니다.
    id 'java'
    // Spring Boot 3.1.3 버전을 사용합니다.
    id 'org.springframework.boot' version '3.1.0'
    // Spring Boot의 의존성 관리를 위해 사용합니다.
    // 해당 플러그인이 존재할 경우, Spring의 디펜던시 버전을 코어 버전에 맞는 버전으로 설정해줍니다.
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'org.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = targetCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    //  ==================================================
    //                    Spring Boot
    //  ==================================================

    // 해당 프로젝트에서는 Spring Boot을 웹 용도로 사용합니다.
    // 해당 디펜던시가 없을 경우, Spring의 Tomcat 서비스가 활성화되지 않습니다.
    implementation('org.springframework.boot:spring-boot-starter-web')
    // Spring Security를 통해 Spring Boot의 보안 기능을 활성화합니다.
    implementation('org.springframework.boot:spring-boot-starter-security')
    // Spring Boot의 JPA를 활성화합니다.
    // JPA는 Java Persistence API의 약자로, Spring에서 데이터베이스를 사용하기 위한 API입니다.
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    // Spring Boot의 Thymeleaf 템플릿 엔진 디펜던시입니다.
    // 해당 프로젝트에서는 Thymeleaf를 사용하지는 않으나, Spring Boot의 웹 기본 설정을 Thymeleaf로 대체합니다.
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')



    //  ==================================================
    //                     AWS SDK
    //  ==================================================

    // AWS SDK를 사용하기 전, 전체적인 버전 관리를 위해 BOM(Build Of Material)을 추가합니다.
    // 해당 프로젝트는 AWS SDK 1.12.529 버전의 BOM을 사용하기에, 다른 AWS 의존성 또한 해당 버전으로 고정됩니다.
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.529')
    // AWS S3을 사용하기 위해 S3 의존성을 추가합니다.
    implementation('com.amazonaws:aws-java-sdk-s3')


    //  ==================================================
    //                      JWT
    //  ==================================================

    // JJWT는 JWT(Json Web Token)을 생성하기 위한 프레임워크입니다.
    // 프레임워크 사용을 위해 API를 추가합니다.
    compileOnly("io.jsonwebtoken:jjwt-api:0.12.3")
    // 프레임워크 사용을 위해 구현체를 추가합니다.
    // 구현체(impl)은 runtimeOnly로 지정했음으로, 직접 접근이 불가능합니다.
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.12.3")
    // 프레임워크 사용을 위해 Jackson을 추가합니다.
    // 해당 프레임워크는 jackson을 이용하여 직접 jwt를 처리하는 플랫폼입니다.
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.3")


    //  ==================================================
    //                     Others
    //  ==================================================

    // H2 데이터베이스를 사용하기 위한 의존성입니다.
    // H2는 인메모리 데이터베이스로, 테스트 용도로 사용됩니다.
    implementation("com.h2database:h2")

    // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    implementation 'com.mysql:mysql-connector-j:8.2.0'

    // lombok은 생성자 자동 생성 및 게터 / 세터 자동 생성을 위한 프레임워크입니다.
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}
